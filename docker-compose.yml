version: '1'
services:
  mongodb:
    image: mongo
    container_name: mongodb
    command: --auth
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=adminuser1
      - MONGO_INITDB_ROOT_PASSWORD=p4ssword!
      - DB_NAME=${DB_NAME:-app}
    volumes:
      - ./data:/data/d
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    expose:
      - 27017
  app:
    build:
      context: api
      dockerfile: dockerfile
      args:
        - APP_PORT=${APP_PORT:-3000}
    ports:
      - '3000:${APP_PORT:-3000}'
    environment:
      - MONGO_URL=mongodb://adminuser1:p4ssword!@mongodb:27017/
      - PORT=${APP_PORT:-3000}
      - DB_NAME=${DB_NAME:-app}
    depends_on:
      - mongodb
  chatmongodb:
    image: mongo
    container_name: chatmongodb
    command: --auth
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=adminuser1
      - MONGO_INITDB_ROOT_PASSWORD=p4ssword!
    volumes:
      - ./chat_data:/data/
    expose:
      - 27017
  chat:
    build:
      context: chat
      dockerfile: dockerfile
      args:
        - CHAT_PORT=${CHAT_PORT:-3030}
    ports:
      - '3030:${CHAT_PORT:-3030}'
    environment:
      - MONGO_URL=mongodb://adminuser1:p4ssword!@chatmongodb:27017/
      - PORT=${CHAT_PORT:-3030}
      - APP_PORT=${APP_PORT:-3000}
      - DB_NAME=${CHAT_DB_NAME:-chat}
    depends_on:
      - chatmongodb
  messagebus:
    image: rabbitmq:latest
    container_name: messagebus
    hostname: "messagebus"
    labels:
      NAME: "messagebus"
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "25672:25672"
      - "15671:15671"
      - "15672:15672"
  db-exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: db-exporter
    ports:
      - "9216:9216"
      - "17001:17001"
    depends_on:
      - mongodb
    command: --mongodb.uri=mongodb://adminuser1:p4ssword!@mongodb:27017/,mongodb://adminuser1:p4ssword!@chatmongodb:27017/ --collect-all --compatible-mode
  prometheus:
    build:
      context: ./prometheus
      dockerfile: dockerfile
      args:
        - APP_PORT=${APP_PORT:-3000}
        - CHAT_PORT=${CHAT_PORT:-3030}
    volumes:
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
  grafana:
    build:
      context: ./grafana
      dockerfile: dockerfile
    ports:
      - "5000:3000"
  alertmanager:
    image: prom/alertmanager:latest
    restart: unless-stopped
    container_name: alertmgr
    ports:
      - "9093:9093"
    volumes:
      - "./alertmanager:/config"
      - alertmanager-data:/data
    environment:
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    command: --config.file=/config/alertmanager.yml --log.level=debug
volumes:
  prometheus-data:
  alertmanager-data:
